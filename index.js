module.exports = {
  root: true,
  extends: [
    'airbnb',
    'airbnb/hooks',
    'plugin:eslint-comments/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:react/recommended',
    'plugin:promise/recommended',
    'plugin:sonarjs/recommended',
    'plugin:unicorn/recommended',
    'prettier',
    'plugin:@next/next/recommended',
  ],
  plugins: [
    '@emotion',
    'eslint-comments',
    'graphql',
    'import',
    'jsx-a11y',
    'promise',
    'react',
    'react-hooks',
    'sonarjs',
    'unicorn',
    '@next/next',
  ],
  rules: {
    camelcase: 'off',
    'no-else-return': 'off',
    'no-console': 'warn',
    'no-debugger': 'warn',
    'no-multiple-empty-lines': [
      'error',
      {
        max: 3,
        maxEOF: 0,
      },
    ],
    'no-underscore-dangle': 'off',
    'no-unused-expressions': [
      'warn',
      {
        allowShortCircuit: true,
        allowTernary: true,
        allowTaggedTemplates: true,
      },
    ],
    'no-unused-vars': [
      'warn',
      {
        ignoreRestSiblings: true,
      },
    ],
    'no-useless-computed-key': 'warn',
    'no-useless-constructor': 'warn',
    'no-useless-rename': [
      'warn',
      {
        ignoreDestructuring: false,
        ignoreImport: false,
        ignoreExport: false,
      },
    ],
    'no-void': 'off',
    'padded-blocks': [
      'error',
      {
        blocks: 'never',
        switches: 'never',
        classes: 'never',
      },
    ],
    'prefer-const': 'warn',
    'spaced-comment': [
      'error',
      'always',
      {
        markers: ['/', '::'],
      },
    ],
    'import/default': 'warn',
    'import/named': 'warn',
    'import/namespace': 'error',
    'import/extensions': 'off',
    'sonarjs/no-duplicate-string': ['error', 5],
    'unicorn/filename-case': 'off',
    'unicorn/catch-error-name': [
      'warn',
      {
        name: 'err',
      },
    ],
    'unicorn/no-null': 'off',
    'unicorn/no-reduce': 'off',
    'unicorn/no-fn-reference-in-iterator': 'off',
    'unicorn/numeric-separators-style': 'off',
    'unicorn/prevent-abbreviations': 'off',
    'unicorn/prefer-spread': 'off',
    'jsx-a11y/anchor-is-valid': 'off',
    'jsx-a11y/aria-props': 'error',
    'jsx-a11y/aria-role': 'error',
    'jsx-a11y/heading-has-content': 'error',
    'jsx-a11y/href-no-hash': 'off',
    'jsx-a11y/label-has-for': 'off',
    'jsx-a11y/mouse-events-have-key-events': 'error',
    'jsx-a11y/role-has-required-aria-props': 'error',
    'jsx-a11y/role-supports-aria-props': 'error',
    'jsx-a11y/img-redundant-alt': 'error',
    'jsx-a11y/no-access-key': 'error',
    'jsx-a11y/label-has-associated-control': 'off',
    'react/jsx-indent': 'off',
    'react/prop-types': 'off',
    'react/require-default-props': 'off',
    'react/no-unknown-property': 'off',
    'react/forbid-prop-types': [
      'error',
      {
        forbid: ['any'],
      },
    ],
    'react/default-props-match-prop-types': 'off',
    'react/jsx-curly-brace-presence': 'off',
    'react/jsx-filename-extension': [
      'error',
      {
        extensions: ['.js', '.mjs', '.tsx'],
      },
    ],
    'react/no-array-index-key': 'off',
    'react/no-unused-prop-types': 'off',
    'react/jsx-indent-props': 'off',
    'react/jsx-wrap-multilinis': 'off',
    'react/sort-comp': 'off',
    'react/static-property-placement': 'off',
    'react/state-in-constructor': 'off',
    'react/jsx-props-no-spreading': 'off',
    'react/react-in-jsx-scope': 'off',

    'react-hooks/rules-of-hooks': 'error',
    'react-hooks/exhaustive-deps': 'warn',

    '@emotion/jsx-import': 'error',
    '@emotion/pkg-renaming': 'error',
    '@emotion/styled-import': 'error',
    '@emotion/syntax-preference': ['warn', 'object'],

    '@next/next/no-img-element': 'off',
  },
  settings: {
    'import/resolver': {
      node: {
        extensions: ['.js', '.mjs', '.ts', '.jsx', '.tsx', '.json'],
      },
    },
    'import/extensions': ['.js', '.mjs', '.ts', '.jsx', '.tsx'],
  },
  overrides: [
    {
      files: [
        '**/*.test.js',
        '**/*.test.ts',
        '**/*.test.tsx',
        '**/*.spec.js',
        '**/*.spec.ts',
        '**/*.spec.tsx',
      ],
      env: {
        jest: true,
      },
      extends: [
        'airbnb',
        'airbnb/hooks',
        'plugin:eslint-comments/recommended',
        'plugin:import/errors',
        'plugin:import/warnings',
        'plugin:react/recommended',
        'plugin:promise/recommended',
        'plugin:sonarjs/recommended',
        'plugin:unicorn/recommended',
        'prettier',
        'plugin:@next/next/recommended',
        'plugin:jest/recommended',
        'plugin:jest/style',
        'plugin:testing-library/react',
      ],
      plugins: [
        'eslint-comments',
        'graphql',
        'import',
        'jsx-a11y',
        'promise',
        'react',
        'react-hooks',
        'sonarjs',
        'unicorn',
        '@next/next',
        'jest',
        'testing-library',
      ],
    },
    {
      files: ['**/*.js', '**/*.jsx'],
      parser: '@babel/eslint-parser',
      extends: [
        'airbnb',
        'airbnb/hooks',
        'plugin:eslint-comments/recommended',
        'plugin:import/errors',
        'plugin:import/warnings',
        'plugin:react/recommended',
        'plugin:promise/recommended',
        'plugin:sonarjs/recommended',
        'plugin:unicorn/recommended',
        'prettier',
        'plugin:@next/next/recommended',
      ],
      plugins: [
        'eslint-comments',
        'graphql',
        'import',
        'jsx-a11y',
        'promise',
        'react',
        'react-hooks',
        'sonarjs',
        'unicorn',
        '@next/next',
      ],
      rules: {
        camelcase: 'off',
        'no-else-return': 'off',
        'no-console': 'warn',
        'no-debugger': 'warn',
        'no-multiple-empty-lines': [
          'error',
          {
            max: 3,
            maxEOF: 0,
          },
        ],
        'no-underscore-dangle': 'off',
        'no-unused-expressions': [
          'warn',
          {
            allowShortCircuit: true,
            allowTernary: true,
            allowTaggedTemplates: true,
          },
        ],
        'no-unused-vars': 'warn',
        'no-undef': 'off',
        'no-use-before-define': 'off',
        'no-useless-computed-key': 'warn',
        'no-useless-constructor': 'warn',
        'no-useless-rename': [
          'warn',
          {
            ignoreDestructuring: false,
            ignoreImport: false,
            ignoreExport: false,
          },
        ],
        'no-void': 'off',
        'padded-blocks': [
          'error',
          {
            blocks: 'never',
            switches: 'never',
            classes: 'never',
          },
        ],
        'prefer-const': 'warn',
        'spaced-comment': [
          'error',
          'always',
          {
            markers: ['/', '::'],
          },
        ],

        'import/default': 'warn',
        'import/extensions': 'off',
        'import/named': 'warn',
        'import/namespace': 'error',
        'import/no-unresolved': 'off',

        'jsx-a11y/anchor-is-valid': 'off',
        'jsx-a11y/aria-props': 'error',
        'jsx-a11y/aria-role': 'error',
        'jsx-a11y/heading-has-content': 'error',
        'jsx-a11y/href-no-hash': 'off',
        'jsx-a11y/label-has-for': 'off',
        'jsx-a11y/mouse-events-have-key-events': 'error',
        'jsx-a11y/role-has-required-aria-props': 'error',
        'jsx-a11y/role-supports-aria-props': 'error',
        'jsx-a11y/img-redundant-alt': 'error',
        'jsx-a11y/no-access-key': 'error',
        'jsx-a11y/label-has-associated-control': 'off',

        'react/jsx-indent': 'off',
        'react/prop-types': 'off',
        'react/require-default-props': 'off',
        'react/forbid-prop-types': [
          'error',
          {
            forbid: ['any'],
          },
        ],
        'react/default-props-match-prop-types': 'off',
        'react/jsx-curly-brace-presence': 'off',
        'react/jsx-filename-extension': [
          'error',
          {
            extensions: ['.js', '.mjs', '.tsx'],
          },
        ],
        'react/no-array-index-key': 'off',
        'react/no-unused-prop-types': 'off',
        'react/no-unknown-property': 'off',
        'react/jsx-indent-props': 'off',
        'react/jsx-wrap-multilinis': 'off',
        'react/sort-comp': 'off',
        'react/static-property-placement': 'off',
        'react/state-in-constructor': 'off',
        'react/jsx-props-no-spreading': 'off',
        'react/react-in-jsx-scope': 'off',

        'react-hooks/rules-of-hooks': 'error',
        'react-hooks/exhaustive-deps': 'warn',

        'sonarjs/no-duplicate-string': ['error', 5],

        'unicorn/filename-case': 'off',
        'unicorn/catch-error-name': [
          'warn',
          {
            name: 'err',
          },
        ],
        'unicorn/no-null': 'off',
        'unicorn/no-reduce': 'off',
        'unicorn/no-fn-reference-in-iterator': 'off',
        'unicorn/numeric-separators-style': 'off',
        'unicorn/prevent-abbreviations': 'off',
        'unicorn/prefer-spread': 'off',

        '@emotion/jsx-import': 'error',
        '@emotion/pkg-renaming': 'error',
        '@emotion/styled-import': 'error',
        '@emotion/syntax-preference': ['warn', 'object'],

        '@next/next/no-img-element': 'off',
      },
    },
    {
      files: ['**/*.ts', '**/*.tsx'],
      extends: [
        'airbnb',
        'airbnb/hooks',
        'plugin:eslint-comments/recommended',
        'plugin:import/errors',
        'plugin:import/warnings',
        'plugin:react/recommended',
        'plugin:promise/recommended',
        'plugin:sonarjs/recommended',
        'plugin:unicorn/recommended',
        'prettier',
        'plugin:@next/next/recommended',
        'plugin:@typescript-eslint/eslint-recommended',
        'plugin:@typescript-eslint/recommended',
        'plugin:@typescript-eslint/recommended-requiring-type-checking',
        'plugin:import/typescript',
      ],
      plugins: [
        'eslint-comments',
        'graphql',
        'import',
        'jsx-a11y',
        'promise',
        'react',
        'react-hooks',
        'sonarjs',
        'unicorn',
        '@next/next',
        '@typescript-eslint',
      ],
      parser: '@typescript-eslint/parser',
      parserOptions: {
        ecmaVersion: 2020,
        project: 'tsconfig.json',
        sourceType: 'module',
        ecmaFeatures: {
          jsx: true,
        },
        warnOnUnsupportedTypeScriptVersion: false,
        tsconfigRootDir:
          '/home/universe.dart.spb/nanisimov/profkarniz-nws/node_modules/eslint-config-none23',
      },
      rules: {
        camelcase: 'off',
        'no-else-return': 'off',
        'no-undef': 'off',
        'no-console': 'warn',
        'no-debugger': 'warn',
        'no-multiple-empty-lines': [
          'error',
          {
            max: 3,
            maxEOF: 0,
          },
        ],
        'no-underscore-dangle': 'off',
        'no-unused-expressions': [
          'warn',
          {
            allowShortCircuit: true,
            allowTernary: true,
            allowTaggedTemplates: true,
          },
        ],
        'no-unused-vars': 'off',
        'no-useless-computed-key': 'warn',
        'no-useless-constructor': 'warn',
        'no-useless-rename': [
          'warn',
          {
            ignoreDestructuring: false,
            ignoreImport: false,
            ignoreExport: false,
          },
        ],
        'no-void': 'off',
        'padded-blocks': [
          'error',
          {
            blocks: 'never',
            switches: 'never',
            classes: 'never',
          },
        ],
        'prefer-const': 'warn',
        'spaced-comment': [
          'error',
          'always',
          {
            markers: ['/', '::'],
          },
        ],

        'import/default': 'warn',
        'import/extensions': 'off',
        'import/named': 'warn',
        'import/namespace': 'error',
        'import/no-unresolved': 'off',

        'jsx-a11y/anchor-is-valid': 'off',
        'jsx-a11y/aria-props': 'error',
        'jsx-a11y/aria-role': 'error',
        'jsx-a11y/heading-has-content': 'error',
        'jsx-a11y/href-no-hash': 'off',
        'jsx-a11y/label-has-for': 'off',
        'jsx-a11y/mouse-events-have-key-events': 'error',
        'jsx-a11y/role-has-required-aria-props': 'error',
        'jsx-a11y/role-supports-aria-props': 'error',
        'jsx-a11y/img-redundant-alt': 'error',
        'jsx-a11y/no-access-key': 'error',
        'jsx-a11y/label-has-associated-control': 'off',

        'react/jsx-indent': 'off',
        'react/prop-types': 'off',
        'react/require-default-props': 'off',
        'react/forbid-prop-types': [
          'error',
          {
            forbid: ['any'],
          },
        ],
        'react/default-props-match-prop-types': 'off',
        'react/jsx-curly-brace-presence': 'off',
        'react/jsx-filename-extension': [
          'error',
          {
            extensions: ['.js', '.mjs', '.tsx'],
          },
        ],
        'react/no-array-index-key': 'off',
        'react/no-unused-prop-types': 'off',
        'react/jsx-indent-props': 'off',
        'react/jsx-wrap-multilinis': 'off',
        'react/sort-comp': 'off',
        'react/static-property-placement': 'off',
        'react/state-in-constructor': 'off',
        'react/jsx-props-no-spreading': 'off',
        'react/react-in-jsx-scope': 'off',

        'react-hooks/rules-of-hooks': 'error',
        'react-hooks/exhaustive-deps': 'warn',

        'sonarjs/no-duplicate-string': ['error', 5],

        'unicorn/filename-case': 'off',
        'unicorn/catch-error-name': [
          'warn',
          {
            name: 'err',
          },
        ],
        'unicorn/no-null': 'off',
        'unicorn/no-reduce': 'off',
        'unicorn/no-fn-reference-in-iterator': 'off',
        'unicorn/numeric-separators-style': 'off',
        'unicorn/prevent-abbreviations': 'off',
        'unicorn/prefer-spread': 'off',

        '@emotion/jsx-import': 'error',
        '@emotion/pkg-renaming': 'error',
        '@emotion/styled-import': 'error',
        '@emotion/syntax-preference': ['warn', 'object'],

        '@next/next/no-img-element': 'off',

        '@typescript-eslint/no-unused-vars': 'off',
        '@typescript-eslint/ban-ts-comment': [
          'warn',
          {
            'ts-expect-error': 'allow-with-description',
            minimumDescriptionLength: 3,
          },
        ],
        'no-restricted-globals': [
          'error',
          'postMessage',
          'blur',
          'focus',
          'close',
          'frames',
          'self',
          'parent',
          'opener',
          'top',
          'length',
          'closed',
          'location',
          'origin',
          'name',
          'locationbar',
          'menubar',
          'personalbar',
          'scrollbars',
          'statusbar',
          'toolbar',
          'status',
          'frameElement',
          'navigator',
          'customElements',
          'external',
          'screen',
          'innerWidth',
          'innerHeight',
          'scrollX',
          'pageXOffset',
          'scrollY',
          'pageYOffset',
          'screenX',
          'screenY',
          'outerWidth',
          'outerHeight',
          'devicePixelRatio',
          'clientInformation',
          'screenLeft',
          'screenTop',
          'defaultStatus',
          'defaultstatus',
          'styleMedia',
          'onanimationend',
          'onanimationiteration',
          'onanimationstart',
          'onsearch',
          'ontransitionend',
          'onwebkitanimationend',
          'onwebkitanimationiteration',
          'onwebkitanimationstart',
          'onwebkittransitionend',
          'isSecureContext',
          'onabort',
          'onblur',
          'oncancel',
          'oncanplay',
          'oncanplaythrough',
          'onchange',
          'onclick',
          'onclose',
          'oncontextmenu',
          'oncuechange',
          'ondblclick',
          'ondrag',
          'ondragend',
          'ondragenter',
          'ondragleave',
          'ondragover',
          'ondragstart',
          'ondrop',
          'ondurationchange',
          'onemptied',
          'onended',
          'onerror',
          'onfocus',
          'oninput',
          'oninvalid',
          'onkeydown',
          'onkeypress',
          'onkeyup',
          'onload',
          'onloadeddata',
          'onloadedmetadata',
          'onloadstart',
          'onmousedown',
          'onmouseenter',
          'onmouseleave',
          'onmousemove',
          'onmouseout',
          'onmouseover',
          'onmouseup',
          'onmousewheel',
          'onpause',
          'onplay',
          'onplaying',
          'onprogress',
          'onratechange',
          'onreset',
          'onresize',
          'onscroll',
          'onseeked',
          'onseeking',
          'onselect',
          'onstalled',
          'onsubmit',
          'onsuspend',
          'ontimeupdate',
          'ontoggle',
          'onvolumechange',
          'onwaiting',
          'onwheel',
          'onauxclick',
          'ongotpointercapture',
          'onlostpointercapture',
          'onpointerdown',
          'onpointermove',
          'onpointerup',
          'onpointercancel',
          'onpointerover',
          'onpointerout',
          'onpointerenter',
          'onpointerleave',
          'onafterprint',
          'onbeforeprint',
          'onbeforeunload',
          'onhashchange',
          'onlanguagechange',
          'onmessage',
          'onmessageerror',
          'onoffline',
          'ononline',
          'onpagehide',
          'onpageshow',
          'onpopstate',
          'onrejectionhandled',
          'onstorage',
          'onunhandledrejection',
          'onunload',
          'performance',
          'stop',
          'open',
          'print',
          'captureEvents',
          'releaseEvents',
          'getComputedStyle',
          'matchMedia',
          'moveTo',
          'moveBy',
          'resizeTo',
          'resizeBy',
          'getSelection',
          'find',
          'createImageBitmap',
          'scroll',
          'scrollTo',
          'scrollBy',
          'onappinstalled',
          'onbeforeinstallprompt',
          'crypto',
          'ondevicemotion',
          'ondeviceorientation',
          'ondeviceorientationabsolute',
          'indexedDB',
          'webkitStorageInfo',
          'chrome',
          'visualViewport',
          'speechSynthesis',
          'webkitRequestFileSystem',
          'webkitResolveLocalFileSystemURL',
          'openDatabase',
        ],
      },
    },
  ],
};
